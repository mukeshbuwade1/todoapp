{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","myValue","setMyValue","myArr","setMyArr","className","type","onChange","event","target","value","placeholder","onClick","preValue","map","val","id","oldArr","filter","temp","i","delIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAqDeA,MAhDf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAqBA,OACE,mCACE,sBAAKC,UAAU,WAAf,UACE,2CACA,sBAAKA,UAAU,YAAf,UACE,uBAAOC,KAAK,OAAOC,SAxBR,SAACC,GAClBN,EAAWM,EAAMC,OAAOC,QAuBwBC,YAAY,kBAAkBD,MAAOT,IAC/E,cAAC,IAAD,CAASI,UAAU,UAAUO,QArBnB,WAChBR,GAAS,SAACS,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBZ,OAEvBC,EAAW,UAmBP,6BACGC,EAAMW,KAAI,SAACC,EAAKC,GAEf,OAAQ,sBAAKX,UAAU,MAAf,UACN,cAAC,IAAD,CAAYA,UAAU,WAAWO,QAAS,kBApBvC,SAACI,GACZZ,GAAS,SAACa,GACR,OAAOA,EAAOC,QAAO,SAACC,EAAMC,GAC1B,OAAOA,IAAMJ,QAiBqCK,CAAQL,MACtD,6BAAKD,kBC9BJO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a25bfbc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction App() {\n\n  const [myValue, setMyValue] = useState(\"\");\n  const [myArr, setMyArr] = useState([]);\n\n  const changeEvent =(event)=>{\n    setMyValue(event.target.value);\n  }\n\n  const clickEvent =()=>{\n    setMyArr((preValue)=>{\n      return [...preValue, myValue]\n    });\n    setMyValue(\"\")\n  }\n\n  const delIcon =(id)=>{\n      setMyArr((oldArr)=>{\n        return oldArr.filter((temp, i)=>{\n          return i !== id\n        })\n      })\n  }\n\n  return (\n    <>\n      <div className=\"main-div\">\n        <h1>ToDo List</h1>\n        <div className=\"input-div\">\n          <input type=\"text\" onChange={changeEvent} placeholder=\"Enter Item Here\" value={myValue} />\n          <AddIcon className=\"AddIcon\" onClick={clickEvent} />\n        </div>\n        <ul>\n          {myArr.map((val, id)=>{\n\n            return (<div className=\"div\">\n              <DeleteIcon className=\"delIcone\" onClick={()=>delIcon(id)} />\n              <li>{val}</li>\n            </div>)\n          })}\n          \n        </ul>\n      </div>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}